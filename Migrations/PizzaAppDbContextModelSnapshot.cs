// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaOrdering_Mvc.PizzaApp_DbContext;

#nullable disable

namespace PizzaOrdering_Mvc.Migrations
{
    [DbContext(typeof(PizzaAppDbContext))]
    partial class PizzaAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PizzaOrdering_Mvc.Models.Base", b =>
                {
                    b.Property<Guid>("baseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("baseId");

                    b.ToTable("Base");

                    b.HasData(
                        new
                        {
                            baseId = new Guid("e64fedda-395f-4818-9775-f34c5904bddb"),
                            BaseName = "Thick"
                        },
                        new
                        {
                            baseId = new Guid("f6a7fa18-9443-4efc-a971-fec92c73980d"),
                            BaseName = "Thin"
                        });
                });

            modelBuilder.Entity("PizzaOrdering_Mvc.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("PizzaOrdering_Mvc.Models.Pizza", b =>
                {
                    b.Property<Guid>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PizzaId");

                    b.HasIndex("BaseId");

                    b.HasIndex("SizeId");

                    b.ToTable("Pizza");
                });

            modelBuilder.Entity("PizzaOrdering_Mvc.Models.PizzaTopping", b =>
                {
                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ToppingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PizzaId", "ToppingId");

                    b.HasIndex("ToppingId");

                    b.ToTable("PizzaTopping");
                });

            modelBuilder.Entity("PizzaOrdering_Mvc.Models.Size", b =>
                {
                    b.Property<Guid>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PizzaSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SizeId");

                    b.ToTable("Size");

                    b.HasData(
                        new
                        {
                            SizeId = new Guid("ba90dc5e-785c-4fe9-8974-c7cd568b0431"),
                            PizzaSize = "Large"
                        },
                        new
                        {
                            SizeId = new Guid("e322a564-d000-44a1-a544-8e002e1d739f"),
                            PizzaSize = "Medium"
                        },
                        new
                        {
                            SizeId = new Guid("96560410-465e-4e38-bb5e-11e2f1d82601"),
                            PizzaSize = "Small"
                        });
                });

            modelBuilder.Entity("PizzaOrdering_Mvc.Models.Toppings", b =>
                {
                    b.Property<Guid>("ToppingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ToppingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToppingId");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            ToppingId = new Guid("364f1bd3-476e-45ac-975f-e8b34da254fb"),
                            ToppingName = "Chicken"
                        },
                        new
                        {
                            ToppingId = new Guid("17c0bdd5-c6da-47c5-b622-741a292302b8"),
                            ToppingName = "Pepperoni"
                        },
                        new
                        {
                            ToppingId = new Guid("75e2b1b2-67dc-4f69-89f4-bb768c1b8071"),
                            ToppingName = "Extra Chaeese"
                        },
                        new
                        {
                            ToppingId = new Guid("de3cc5be-01ed-4ba2-84bf-db1b4f96edbd"),
                            ToppingName = "Mushroom"
                        },
                        new
                        {
                            ToppingId = new Guid("b92b2655-8860-4865-8de5-60e622a761a1"),
                            ToppingName = "Spinach"
                        },
                        new
                        {
                            ToppingId = new Guid("1508dbfa-f1aa-447b-8f20-3ce74bb6f0ce"),
                            ToppingName = "Olives"
                        });
                });

            modelBuilder.Entity("PizzaOrdering_Mvc.Models.Order", b =>
                {
                    b.HasOne("PizzaOrdering_Mvc.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("PizzaOrdering_Mvc.Models.Pizza", b =>
                {
                    b.HasOne("PizzaOrdering_Mvc.Models.Base", "_base")
                        .WithMany()
                        .HasForeignKey("BaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaOrdering_Mvc.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Size");

                    b.Navigation("_base");
                });

            modelBuilder.Entity("PizzaOrdering_Mvc.Models.PizzaTopping", b =>
                {
                    b.HasOne("PizzaOrdering_Mvc.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaOrdering_Mvc.Models.Toppings", "Topping")
                        .WithMany()
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");

                    b.Navigation("Topping");
                });
#pragma warning restore 612, 618
        }
    }
}
